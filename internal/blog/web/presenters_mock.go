// Code generated by MockGen. DO NOT EDIT.
// Source: web/presenters.go
//
// Generated by this command:
//
//	mockgen -source web/presenters.go -package web -destination web/presenters_mock.go
//
// Package web is a generated GoMock package.
package web

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockPresenters is a mock of Presenters interface.
type MockPresenters struct {
	ctrl     *gomock.Controller
	recorder *MockPresentersMockRecorder
}

// MockPresentersMockRecorder is the mock recorder for MockPresenters.
type MockPresentersMockRecorder struct {
	mock *MockPresenters
}

// NewMockPresenters creates a new mock instance.
func NewMockPresenters(ctrl *gomock.Controller) *MockPresenters {
	mock := &MockPresenters{ctrl: ctrl}
	mock.recorder = &MockPresentersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPresenters) EXPECT() *MockPresentersMockRecorder {
	return m.recorder
}

// Response mocks base method.
func (m *MockPresenters) Response(ctx *gin.Context, arg any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Response", ctx, arg)
}

// Response indicates an expected call of Response.
func (mr *MockPresentersMockRecorder) Response(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Response", reflect.TypeOf((*MockPresenters)(nil).Response), ctx, arg)
}
